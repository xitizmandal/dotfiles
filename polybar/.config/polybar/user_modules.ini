;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;
;;	   __  __                  __  ___          __      __         
;;	  / / / /_______  _____   /  |/  /___  ____/ /_  __/ /__  _____
;;	 / / / / ___/ _ \/ ___/  / /|_/ / __ \/ __  / / / / / _ \/ ___/
;;	/ /_/ (__  )  __/ /     / /  / / /_/ / /_/ / /_/ / /  __(__  ) 
;;	\____/____/\___/_/     /_/  /_/\____/\__,_/\__,_/_/\___/____/  
;; 
;; Created By Aditya Shakya @adi1090x
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/checknetwork]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = ~/.config/polybar/scripts/check-network

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;;exec-if = ""

; Will the script output continous content?
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 5

; Available tags:
;   <output> - deprecated
;   <label> (default)
;;format = <label>
;;format-background = #999
;;format-foreground = #000
;;format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
;;label = %output:0:15:...%

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
click-left = networkmanager_dmenu &
click-middle = networkmanager_dmenu &
click-right = networkmanager_dmenu &
;;double-click-left = echo double left %counter%
;;double-click-middle = echo double middle %counter%
;;double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;;scroll-up = echo scroll up %counter%
;;scroll-down = echo scroll down %counter%

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/updates]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = ~/.config/polybar/scripts/updates.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;;exec-if = ""

; Will the script output continous content?
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 5

; Available tags:
;   <output> - deprecated
;   <label> (default)
;;format = <label>
;;format-background = #999
;;format-foreground = #000
;;format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
;;label = %output:0:15:...%

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
click-left = ~/.config/polybar/scripts/lupdates &
;;click-middle = ~/.config/polybar/scripts/lupdates &
;;click-right = ~/.config/polybar/scripts/lupdates &
;;double-click-left = echo double left %counter%
;;double-click-middle = echo double middle %counter%
;;double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;;scroll-up = echo scroll up %counter%
;;scroll-down = echo scroll down %counter%

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/window_switch]
type = custom/text
content = Switch
content-prefix = " "
content-prefix-foreground = ${color.blue}

; "content" has the same properties as "format-NAME"
;;content-background = #000
;;content-foreground = #fff
;;content-padding = 4

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = skippy-xd

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = skippy-xd
;;scroll-down = skippy-xd

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/launcher]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
;;content-background = #000
content-foreground = ${color.red}
;;content-padding = 4

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/launcher
click-right = ~/.config/polybar/scripts/runner

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/scripts/launcher-full
;;scroll-down = ~/.config/polybar/scripts/launcher-full

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/sep]
type = custom/text
content = |

;;content-background = #000
content-foreground = ${color.bg-alt}
;;content-padding = 4

[module/sep2]
type = custom/text
content = "| "

;;content-background = #000
content-foreground = ${color.bg-alt}
;;content-padding = 4

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/sysmenu]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
;;content-background = #000
content-foreground = ${color.yellow}
;;content-padding = 4

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/powermenu

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/scripts/powermenu
;;scroll-down = ~/.config/polybar/scripts/powermenu

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/powermenu]
type = custom/menu

; If true, <label-toggle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Available exec commands:
;   menu-open-LEVEL
;   menu-close
; Other commands will be executed using "/usr/bin/env sh -c $COMMAND"
menu-0-0 = reboot
menu-0-0-exec = menu-open-1
menu-0-1 = shutdown
menu-0-1-exec = menu-open-2

menu-1-0 = back
menu-1-0-exec = menu-open-0
menu-1-1 = reboot
menu-1-1-exec = systemctl reboot

menu-2-0 = shutdown
menu-2-0-exec = systemctl poweroff
menu-2-1 = back
menu-2-1-exec = menu-open-0

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>

;;format = <label-toggle> <menu>
;;format-prefix = ${menu.icon-menu}
format-spacing = 1 

label-open = 
label-close = 


; Optional item separator
; Default: none
label-separator = |

label-open-foreground = ${color.teal}
label-close-foreground = ${color.teal}
label-separator-foreground = ${color.teal}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/menu]
type = custom/menu

; If true, <label-toggle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Available exec commands:
;   menu-open-LEVEL
;   menu-close
; Other commands will be executed using "/usr/bin/env sh -c $COMMAND"
menu-0-0 =  Menu
menu-0-0-exec = ~/.config/polybar/scripts/launcher &
menu-0-1 = Files
menu-0-1-exec = thunar &
menu-0-2 = Terminal
menu-0-2-exec = termite &
menu-0-3 = Browser
menu-0-3-exec = firefox &

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>

;;format = <label-toggle> <menu>
;;format-prefix = ${menu.icon-menu}
format-spacing = 1 

label-open = 
label-close = 


; Optional item separator
; Default: none
label-separator = |

label-open-foreground = ${color.pink}
label-close-foreground = ${color.pink}
label-separator-foreground = ${color.pink}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/style]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
content-background = ${color.bg}
content-foreground = ${color.red}
;;content-padding = 3

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/styles.sh --Light
click-right = ~/.config/polybar/scripts/styles.sh --Dark

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/scripts/powermenu
;;scroll-down = ~/.config/polybar/scripts/powermenu

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/time]
type = internal/date

; Seconds to sleep between updates
interval = 1.0

; See "http://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}

; Optional time format
time = %I:%M %p

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
; date-alt = %A, %d %B %Y
; time-alt = %I:%M %p

; Available tags:
;   <label> (default)
format = <label>
format-prefix = " "
format-prefix-foreground = ${color.red}

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = %time%
; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;	    __________  ______
;;	   / ____/ __ \/ ____/
;;	  / __/ / / / / /_    
;;	 / /___/ /_/ / __/    
;;	/_____/\____/_/       
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
[module/previous]
type = custom/script
interval = 86400
format = "%{T3}<label>"
format-padding = 3
; Previous song icon
exec = echo ""
; Check if spotify is running before displaying the icon
; exec-if = "pgrep spotify -x"
format-underline = ${color.green}
line-size = 1
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"

[module/next]
type = custom/script
interval = 86400
format = "%{T3}<label>"
format-padding = 3
; Next song icon
exec = echo ""
; Check if spotify is running before displaying the icon
; exec-if = "pgrep spotify -x"
format-underline = ${color.green}
line-size = 1
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"

[module/playpause]
type = custom/ipc
; Default
hook-0 = echo "%{T3}"
; Playing
hook-1 = echo "%{T3}"
; Paused
hook-2 = echo "%{T3}"
initial = 3
format-underline = ${color.green}
line-size = 1
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause"


[module/spotify]
type = custom/script
interval = 1
format-prefix = "%{T2} "
format-padding = 1
format-prefix-foreground = ${color.green}

format = <label>
exec = python3 ~/.config/polybar/scripts/spotify/spotify_status.py -f '{artist} : {song}'
; content-foreground = ${color.green}
format-underline = ${color.green}
line-size = 1
click-left = i3-msg '[class="Spotify"] focus'

[module/spotify2]
type = custom/ipc
hook-0 = echo ""
hook-1 = python3 ~/scripts/spotify/spotify_status.py
initial = 2
format-padding = 4
format-underline = ${color.green}
line-size = 1
click-left = i3-msg '[class="Spotify"] focus'

